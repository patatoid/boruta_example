stages:
  - test
  - build
  - deploy

services:
  - postgres:latest

.elixir-task:
  image: elixir:1.12.1
  before_script:
  - apt-get install -y libcurl4-openssl-dev libssl-dev libevent-dev
  - mix local.hex --force
  - mix local.rebar --force
  - mix deps.get

test:
  stage: test
  extends: .elixir-task
  script:
  - mix test --trace
  variables:
    POSTGRES_DATABASE: boruta_test
    POSTGRES_HOST: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    MIX_ENV: test

build:
  image: docker:19.03.12
  stage: build
  services:
    - docker:19.03.12-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY/patatoid/boruta_example/app:$CI_COMMIT_SHORT_SHA .
    - docker tag $CI_REGISTRY/patatoid/boruta_example/app:$CI_COMMIT_SHORT_SHA $CI_REGISTRY/patatoid/boruta_example/app:latest
    - docker push $CI_REGISTRY/patatoid/boruta_example/app:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY/patatoid/boruta_example/app:latest
#   only:
#     - master

deploy:
  stage: deploy
  image: debian:latest
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
    - .cache/pip
  before_script:
  - apt-get update
  - apt-get install -y curl python3-pip apt-transport-https
  - curl https://baltocdn.com/helm/signing.asc | apt-key add -
  - echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
  - apt-get update
  - apt-get install -y helm
  - pip3 install --upgrade setuptools pip
    # reject 0.13.0 openshift version https://github.com/openshift/openshift-restclient-python/issues/425
  - pip3 install ansible pyhelm grpcio requests openshift kubernetes
  - ansible-galaxy collection install kubernetes.core
  - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  - curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
  - echo "$(<kubectl.sha256) kubectl" | sha256sum --check
  - mkdir -p ~/.local/bin/kubectl
  - mv ./kubectl ~/.local/bin/kubectl
  script:
  - cd ansible
  - echo $VAULT_PASSWORD > vault_pass.txt
  - cat vault_pass.txt
  - ansible-vault decrypt ./.kube/kubeconfig-k8s-boruta.yaml --vault-password-file vault_pass.txt
  - KUBECONFIG=./.kube/kubeconfig-k8s-boruta.yaml ansible-playbook -i ./inventories/scaleway deploy.yml -e release_tag=$CI_COMMIT_SHORT_SHA --vault-password-file vault_pass.txt
#   only:
#     - master
